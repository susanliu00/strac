{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\susan\\\\Downloads\\\\strac-app\\\\app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { w3cwebsocket as WebSocket } from \"websocket\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst File = _ref => {\n  let {\n    backendData\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Id: \", backendData[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), backendData[2].map(u => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"u.displayName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            fetch(\"/download\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                backendData\n              })\n            }).then(response => {\n              if (response.ok) {\n                return response.json();\n              } else {\n                throw new Error(\"Error initiating file download\");\n              }\n            }).then(data => {\n              window.open(data.url);\n            }).catch(error => {\n              console.error(error);\n            });\n          },\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = File;\nfunction App() {\n  _s();\n  const [files, setFiles] = useState({});\n  const [websocketURL, setWebsocketURL] = useState(\"\");\n\n  // useEffect(() => {\n  //   const ws = new WebSocket(\"ws://localhost:3000\");\n  // }, []);\n\n  // useEffect(() => {\n  //   const socket = new WebSocket(websocketURL);\n  //   socket.onopen = () => {\n  //     console.log(\"WebSocket connection established.\");\n  //   };\n\n  //   socket.onmessage = (event) => {\n  //     console.log(\"Received message:\", event.data);\n  //   };\n\n  //   socket.onerror = (error) => {\n  //     console.error(\"WebSocket error:\", error);\n  //   };\n\n  //   socket.onclose = () => {\n  //     console.log(\"WebSocket connection closed.\");\n  //   };\n\n  //   return () => {\n  //     socket.close();\n  //   };\n  // }, [websocketURL]);\n  fetch(\"/localtunnel\").then(response => response.json()).then(data => {\n    const apiUrl = data.apiUrl;\n    console.log(\"got apiurl\");\n  }).catch(error => {\n    console.error(\"Error fetching API URL:\", error);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: Object.entries(files).map(_ref2 => {\n      let [id, perm] = _ref2;\n      return /*#__PURE__*/_jsxDEV(File, {\n        backendData: [id, perm]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YLtn8bVsi5De9x1s/OSIl4BiG4s=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"File\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["logo","w3cwebsocket","WebSocket","React","useEffect","useState","jsxDEV","_jsxDEV","File","_ref","backendData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","u","onClick","fetch","method","headers","body","JSON","stringify","then","response","ok","json","Error","data","window","open","url","catch","error","console","_c","App","_s","files","setFiles","websocketURL","setWebsocketURL","apiUrl","log","Object","entries","_ref2","id","perm","_c2","$RefreshReg$"],"sources":["C:/Users/susan/Downloads/strac-app/app/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { w3cwebsocket as WebSocket } from \"websocket\";\nimport React, { useEffect, useState } from \"react\";\n\nconst File = ({ backendData }) => {\n  return (\n    <div className=\"file\">\n      <h2>Id: {backendData[0]}</h2>\n      <div>\n        <h3>Users</h3>\n        {backendData[2].map((u) => {\n          return <div>u.displayName</div>;\n        })}\n        <div className=\"download\">\n          <button\n            onClick={() => {\n              fetch(\"/download\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ backendData }),\n              })\n                .then((response) => {\n                  if (response.ok) {\n                    return response.json();\n                  } else {\n                    throw new Error(\"Error initiating file download\");\n                  }\n                })\n                .then((data) => {\n                  window.open(data.url);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }}\n          >\n            Download\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  const [files, setFiles] = useState({});\n  const [websocketURL, setWebsocketURL] = useState(\"\");\n\n  // useEffect(() => {\n  //   const ws = new WebSocket(\"ws://localhost:3000\");\n  // }, []);\n\n  // useEffect(() => {\n  //   const socket = new WebSocket(websocketURL);\n  //   socket.onopen = () => {\n  //     console.log(\"WebSocket connection established.\");\n  //   };\n\n  //   socket.onmessage = (event) => {\n  //     console.log(\"Received message:\", event.data);\n  //   };\n\n  //   socket.onerror = (error) => {\n  //     console.error(\"WebSocket error:\", error);\n  //   };\n\n  //   socket.onclose = () => {\n  //     console.log(\"WebSocket connection closed.\");\n  //   };\n\n  //   return () => {\n  //     socket.close();\n  //   };\n  // }, [websocketURL]);\n  fetch(\"/localtunnel\")\n    .then((response) => response.json())\n    .then((data) => {\n      const apiUrl = data.apiUrl;\n      console.log(\"got apiurl\");\n    })\n    .catch((error) => {\n      console.error(\"Error fetching API URL:\", error);\n    });\n\n  return (\n    <div className=\"App\">\n      {Object.entries(files).map(([id, perm]) => {\n        return <File backendData={[id, perm]} />;\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}